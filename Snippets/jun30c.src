#########################################################################
# HALT  = 0;  stop program
# ADD   = 1;  GPREG is updated with itself + MEMORY[arg]
# SUB   = 2;  GPREG is updated with itself - MEMORY[arg]
# MLT   = 3;  GPREG is updated with itself * MEMORY[arg]
# DIV   = 4;  GPREG is updated with itself / MEMORY[arg]
# ILOAD = 5;  arg to GPREG
# LOAD  = 6;  MEMORY[arg] to GPREG
# STOR  = 7;  GPREG to MEMORY[arg]
# READ  = 8;  keyboard to MEMORY[arg]
# WRITE = 9;  MEMORY[arg] to screen
# BR    = 10; unconditional branch to instruction at MEMORY[arg]
# BZ    = 11; branch if GPREG is zero
# BN    = 12; branch if GPREG is nonzero
# DUMP  = 13; dump memory/register contents
#########################################################################

# purpose of program:  implement 2x+5 where x is supplied by user

# variable map:
#
#    90 : stores variable 'x'
#    82 : stores a 2 for multiplication
#    85 : stores a 5 for addition
#    95 : stores result of expression 2x+5 for printing

ILOAD 2
STOR  82  # stores a '2' in MEMORY[82]

ILOAD 5
STOR  85  # stores a '5' in MEMORY[85]

READ  90
LOAD  90  # user input is in MEMORY[90] and GPREG

MLT   82

ADD   85

STOR  95
WRITE 95

HALT  99

