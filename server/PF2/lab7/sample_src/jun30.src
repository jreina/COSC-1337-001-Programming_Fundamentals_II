#########################################################################
# HALT  = 0;  stop program
# ADD   = 1;  GPREG is updated with itself + MEMORY[arg]
# SUB   = 2;  GPREG is updated with itself - MEMORY[arg]
# MLT   = 3;  GPREG is updated with itself * MEMORY[arg]
# DIV   = 4;  GPREG is updated with itself / MEMORY[arg]
# ILOAD = 5;  arg to GPREG
# LOAD  = 6;  MEMORY[arg] to GPREG
# STOR  = 7;  GPREG to MEMORY[arg]
# READ  = 8;  keyboard to MEMORY[arg]
# WRITE = 9;  MEMORY[arg] to screen
# BR    = 10; unconditional branch to instruction at MEMORY[arg]
# BZ    = 11; branch if GPREG is zero
# BN    = 12; branch if GPREG is nonzero
# DUMP  = 13; dump memory/register contents
#########################################################################

# 'i' will be read in from user
#  calculate and display i+1

# Memory Map:
#  81 stores a '1' for ++ operations
#  90 stores user input 'i'
#  91 stores the sum for output purposes

ILOAD 1
STOR  81  # store a '1' in MEM[81] for increment

READ  90

DUMP  99

LOAD  90   # stores user input in GPREG

ADD   81

STOR  91
WRITE 91

HALT  99


